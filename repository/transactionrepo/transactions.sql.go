// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: transactions.sql

package transactionrepo

import (
	"context"
)

const getByUserID = `-- name: GetByUserID :one
SELECT
  ` + "`" + `id` + "`" + `,
  ` + "`" + `sending_user_id` + "`" + `,
  ` + "`" + `receiving_user_id` + "`" + `,
  ` + "`" + `transaction_point` + "`" + `,
  ` + "`" + `transaction_at` + "`" + `
FROM
  ` + "`" + `transactions` + "`" + `
WHERE ` + "`" + `receiving_user_id` + "`" + ` = ?
`

func (q *Queries) GetByUserID(ctx context.Context, receivingUserID uint64) (Transactions, error) {
	row := q.db.QueryRowContext(ctx, getByUserID, receivingUserID)
	var i Transactions
	err := row.Scan(
		&i.ID,
		&i.SendingUserID,
		&i.ReceivingUserID,
		&i.TransactionPoint,
		&i.TransactionAt,
	)
	return i, err
}
